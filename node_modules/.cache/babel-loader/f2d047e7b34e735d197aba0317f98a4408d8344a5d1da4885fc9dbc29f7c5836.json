{"ast":null,"code":"var _jsxFileName = \"/Users/hongyang/virtuosoresearch.github.io/virtuoso_research/src/VideoSlideshow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VideoSlideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoUrls = ['https://www.youtube.com/embed/Wm61qG0XVB0'\n//'https://www.youtube.com/embed/NpEaa2P7qZI',\n// Add more video urls here\n];\n\nconst VideoSlideshow = () => {\n  _s();\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const nextVideo = () => {\n    setCurrentVideoIndex(prevIndex => (prevIndex + 1) % videoUrls.length);\n  };\n  const prevVideo = () => {\n    setCurrentVideoIndex(prevIndex => prevIndex === 0 ? videoUrls.length - 1 : prevIndex - 1);\n  };\n  useEffect(() => {\n    // Set up a timer to automatically advance to the next video every 16 seconds (since you have two videos)\n    const timer = setInterval(nextVideo, 16000);\n\n    // Clear the timer when the component unmounts\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-slideshow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-slideshow-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevVideo,\n        className: \"video-nav-button video-prev-button\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextVideo,\n        className: \"video-nav-button video-next-button\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"640\",\n        height: \"385\",\n        src: videoUrls[currentVideoIndex],\n        title: `Video ${currentVideoIndex + 1}`,\n        allow: \"autoplay; encrypted-media\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoSlideshow, \"6I23KF7MV12qcgKDBg5nUEXuxag=\");\n_c = VideoSlideshow;\nexport default VideoSlideshow;\nvar _c;\n$RefreshReg$(_c, \"VideoSlideshow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","videoUrls","VideoSlideshow","_s","currentVideoIndex","setCurrentVideoIndex","nextVideo","prevIndex","length","prevVideo","timer","setInterval","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","title","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["/Users/hongyang/virtuosoresearch.github.io/virtuoso_research/src/VideoSlideshow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VideoSlideshow.css';\n\nconst videoUrls = [\n    'https://www.youtube.com/embed/Wm61qG0XVB0',\n    //'https://www.youtube.com/embed/NpEaa2P7qZI',\n    // Add more video urls here\n];\n\nconst VideoSlideshow: React.FC = () => {\n    const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n    const nextVideo = () => {\n        setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videoUrls.length);\n    };\n\n    const prevVideo = () => {\n        setCurrentVideoIndex((prevIndex) =>\n            prevIndex === 0 ? videoUrls.length - 1 : prevIndex - 1\n        );\n    };\n\n    useEffect(() => {\n        // Set up a timer to automatically advance to the next video every 16 seconds (since you have two videos)\n        const timer = setInterval(nextVideo, 16000);\n\n        // Clear the timer when the component unmounts\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className=\"video-slideshow-container\">\n            <div className=\"video-slideshow-nav\">\n                <button onClick={prevVideo} className=\"video-nav-button video-prev-button\">\n                    &lt;\n                </button>\n                <button onClick={nextVideo} className=\"video-nav-button video-next-button\">\n                    &gt;\n                </button>\n            </div>\n            <div className=\"video-container\">\n                <iframe\n                    width=\"640\"\n                    height=\"385\"\n                    src={videoUrls[currentVideoIndex]}\n                    title={`Video ${currentVideoIndex + 1}`}\n                    allow=\"autoplay; encrypted-media\"\n                    allowFullScreen\n                ></iframe>\n            </div>\n        </div>\n    );\n};\n\nexport default VideoSlideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAG,CACd;AACA;AACA;AAAA,CACH;;AAED,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE7D,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACpBD,oBAAoB,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,SAAS,CAACO,MAAM,CAAC;EAC3E,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBJ,oBAAoB,CAAEE,SAAS,IAC3BA,SAAS,KAAK,CAAC,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CACzD,CAAC;EACL,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,KAAK,GAAGC,WAAW,CAACL,SAAS,EAAE,KAAK,CAAC;;IAE3C;IACA,OAAO,MAAM;MACTM,aAAa,CAACF,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAKa,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtCd,OAAA;MAAKa,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCd,OAAA;QAAQe,OAAO,EAAEN,SAAU;QAACI,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAE3E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QAAQe,OAAO,EAAET,SAAU;QAACO,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAE3E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNnB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5Bd,OAAA;QACIoB,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZC,GAAG,EAAErB,SAAS,CAACG,iBAAiB,CAAE;QAClCmB,KAAK,EAAG,SAAQnB,iBAAiB,GAAG,CAAE,EAAE;QACxCoB,KAAK,EAAC,2BAA2B;QACjCC,eAAe;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CA7CID,cAAwB;AAAAwB,EAAA,GAAxBxB,cAAwB;AA+C9B,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}